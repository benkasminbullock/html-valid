=head1 NAME

HTML::Valid::Tagset - data tables useful in parsing HTML

=head1 VERSION

Version [% version %]

=head1 SYNOPSIS

  use HTML::Valid::Tagset;
  # Then use any of the items in the HTML::Valid::Tagset package
  #  as need arises

=head1 DESCRIPTION

This is a drop-in replacement for HTML::Tagset which uses the tables
of HTML elements from HTML Tidy (the C program, not the Perl module
L<HTML::Tidy>). The documentation for the following is copied from
HTML::Tagset's documentation.

This module contains several data tables useful in various kinds of
HTML parsing operations.

Note that all tag names used are lowercase.

In the following documentation, a "hashset" is a hash being used as a
set -- the hash conveys that its keys are there, and the actual values
associated with the keys are not significant.  (But what values are
there, are always true.)

=cut

=head1 VARIABLES

None of these variables are exported by default.

=head2 hashset %HTML::Valid::Tagset::emptyElement

This hashset has as values the tag-names (GIs) of elements that cannot
have content.  (For example, "base", "br", "hr".)  So
C<$HTML::Valid::Tagset::emptyElement{'hr'}> exists and is true.
C<$HTML::Valid::Tagset::emptyElement{'dl'}> does not exist, and so is not true.

=head2 hashset %HTML::Valid::Tagset::optionalEndTag

This hashset lists tag-names for elements that can have content, but whose
end-tags are generally, "safely", omissible.  Example:
C<$HTML::Valid::Tagset::emptyElement{'li'}> exists and is true.

=head2 hash %HTML::Valid::Tagset::linkElements

Values in this hash are tagnames for elements that might contain
links, and the value for each is a reference to an array of the names
of attributes whose values can be links.

=head2 hash %HTML::Valid::Tagset::boolean_attr

This hash (not hashset) lists what attributes of what elements can be
printed without showing the value (for example, the "noshade" attribute
of "hr" elements).  For elements with only one such attribute, its value
is simply that attribute name.  For elements with many such attributes,
the value is a reference to a hashset containing all such attributes.

=head2 hashset %HTML::Valid::Tagset::isPhraseMarkup

This hashset contains all inline elements.

=head2 hashset %HTML::Valid::Tagset::isInline

This hashset contains all inline elements. It is identical to
C<%isPhraseMarkup>.

=head2 hashset %HTML::Valid::Tagset::isBlock

This hashset contains all block elements.

=head2 hashset %HTML::Valid::Tagset::is_Possible_Strict_P_Content

This hashset contains all phrasal-level elements that be content of a
P element, for a strict model of HTML.

=head2 hashset %HTML::Valid::Tagset::isHeadElement

This hashset contains all elements that elements that should be
present only in the 'head' element of an HTML document.

=head2 hashset %HTML::Valid::Tagset::isList

This hashset contains all elements that can contain "li" elements.

=head2 hashset %HTML::Valid::Tagset::isTableElement

This hashset contains all elements that are to be found only in/under
a "table" element.

=head2 hashset %HTML::Valid::Tagset::isFormElement

This hashset contains all elements that are to be found only in/under
a "form" element.

=head2 hashset %HTML::Valid::Tagset::isBodyMarkup

This hashset contains all elements that are to be found only in/under
the "body" element of an HTML document.

=head2 hashset %HTML::Valid::Tagset::isHeadOrBodyElement

This hashset includes all elements that I notice can fall either in
the head or in the body.

=head2 hashset %HTML::Valid::Tagset::isKnown

This hashset lists all known HTML elements.

=head2 hashset %HTML::Valid::Tagset::canTighten

This hashset lists elements that might have ignorable whitespace as
children or siblings.

=head2 hashset %isCDATA_Parent

This hashset includes all elements whose content is CDATA.

=head2 hashset %isHTML5

It's true if the tag is in HTML5

=head2 hashset %isObsolete

    $isObsolete{canvas};
    $isObsolete{plaintext};

=head1 SEE ALSO

L<HTML::Tagset>, L<HTML::Element>, L<HTML::TreeBuilder>, L<HTML::LinkExtor>

=head1 COPYRIGHT & LICENSE

Copyright 1995-2000 Gisle Aas.

Copyright 2000-2005 Sean M. Burke.

Copyright 2005-2008 Andy Lester.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
